int verde = 11;
int azul = 12;
int vermelho = 13;

void setup () {
  pinMode (verde, OUTPUT);
  pinMode (azul, OUTPUT);
  pinMode (vermelho, OUTPUT);  
}

void loop() {
  bool valor1[4]={false, false, true, true};
  bool valor2[4]={false, true, false, true};

  for (int i=0; i<4; i++) {
    digitalWrite(azul, valor1[i]);
    digitalWrite(vermelho, valor2[i]);
    digitalWrite(verde, and_port(valor1[i], valor2[i]));
    delay(1500);
  }
  
  for (int i=0; i<4; i++) {
    digitalWrite(azul, valor1[i]);
    digitalWrite(vermelho, valor2[i]);
    digitalWrite(verde, or_port(valor1[i], valor2[i]));
    delay(1500);
  }
  
   for (int i=0; i<4; i++) {
    digitalWrite(azul, valor1[i]);
    digitalWrite(vermelho, valor2[i]);
    digitalWrite(verde, nand_port(valor1[i], valor2[i]));
    delay(1500);
  }
  
  for (int i=0; i<4; i++) {
    digitalWrite(azul, valor1[i]);
    digitalWrite(vermelho, valor2[i]);
    digitalWrite(verde, nor_port(valor1[i], valor2[i]));
    delay(1500);
  }
  
  for (int i=0; i<4; i++) {
    digitalWrite(azul, valor1[i]);
    digitalWrite(vermelho, valor2[i]);
    digitalWrite(verde, xor_port(valor1[i], valor2[i]));
    delay(1500);
  }
  
  for (int i=0; i<4; i++) {
    digitalWrite(azul, valor1[i]);
    digitalWrite(vermelho, valor2[i]);
    digitalWrite(verde, xnor_port(valor1[i], valor2[i]));
    delay(1500);
  }
}

bool and_port(bool x, bool y) {
  return x && y;
}

bool or_port(bool x, bool y) {
  return x || y;
}

bool nand_port(bool x, bool y) {
  return !(x && y);
}

bool nor_port(bool x, bool y) {
  return !(x || y);
}

bool xor_port(bool x, bool y) {
  return !x && y || x && !y;
}

bool xnor_port(bool x, bool y) {
  return !(!x && y || x && !y);
}